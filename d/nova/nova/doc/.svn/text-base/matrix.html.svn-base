
<html><head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<meta content="text/javascript" http-equiv="content-script-type">
<title>nova.math.matrix</title>
<link rel="stylesheet" type="text/css" href="candydoc/style.css">
<!--[if lt IE 7]><link rel="stylesheet" type="text/css" href="candydoc/ie56hack.css"><![endif]-->
<script language="JavaScript" src="candydoc/util.js" type="text/javascript"></script>
<script language="JavaScript" src="candydoc/tree.js" type="text/javascript"></script>
<script language="JavaScript" src="candydoc/explorer.js" type="text/javascript"></script>
</head><body>
<div id="tabarea"></div><div id="explorerclient"></div>
<div id="content"><script>explorer.initialize("nova.math.matrix");</script>
    <table class="content">
        <tr><td id="docbody"><h1>nova.math.matrix</h1><!-- Generated by Ddoc from math\matrix.d -->
<b>Autors:</b><br>
Klaus Oberhofer
<br><br>
<b>License:</b><br>
zlib/libpng license
<br><br>
<b>Acknowledgement:</b><br>
Initial implementation file has been grabbed from a digitalmars
		newsgroup, but I don't remember the authors name.
<br><br>

<br><br>


<br><br>


<script>explorer.outline.incSymbolLevel();</script>
<dl>
<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">class 
<span class="currsymbol">
<span class="currsymbol">Vector</span>
<script>explorer.outline.addDecl('Vector');</script>

</span>
<script>explorer.outline.addDecl('
<span class="currsymbol">Vector</span>
<script>explorer.outline.addDecl('Vector');</script>

');</script>

(T): Matrix!(T);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>
<span class="currsymbol">Vector</span>
<script>explorer.outline.addDecl('Vector');</script>

 template class, inherits from Matrix class
<br><br>
Usage patterns:
<br><br>

	1. Template instance alias for convenience
<pre class="d_code">	<font color=blue>private</font> <font color=blue>alias</font> <u>Vector</u>!(<font color=blue>double</font>) DoubleVector;
	<font color=blue>private</font> <font color=blue>alias</font> Matrix!(<font color=blue>double</font>) DoubleMatrix;
</pre>

	2. Create vector instances
<pre class="d_code">  DoubleVector a = <font color=blue>new</font> DoubleVector(1.0, 2.0, 3.0);
  DoubleVector b = <font color=blue>new</font> DoubleVector(2.0, 4.0, 6.0);
</pre>

	3. 
<span class="currsymbol">Vector</span>
<script>explorer.outline.addDecl('Vector');</script>

 add
<pre class="d_code">	DoubleVector c = a + b;
</pre>

	4. Dot product
<pre class="d_code">  DoubleMatrix m = <font color=blue>new</font> DoubleMatrix(3, 3, 2.0, 0.0, 0.0,
                                          0.0, 2.0, 0.0,
                                          0.0, 0.0, 2.0);

	DoubleVector d = m * a;
</pre>

<br><br>


<br><br>


<script>explorer.outline.incSymbolLevel();</script>
<dl>
<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">this(T[] newdata...);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Constructor - creates a line vector
<br><br>
<b>Params:</b><br>
<table><tr>
<td nowrap valign="top" style="padding-right: 8px">l</td>


<td>The vector's size</td></tr>
<tr>
<td nowrap valign="top" style="padding-right: 8px">t</td>


<td>The type of the vector to create
				...  = Optional datas (0 or l values)</td></tr>
</table><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Vector 
<span class="currsymbol">dup</span>
<script>explorer.outline.addDecl('dup');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Duplicate the vector
<br><br>
<b>Returns:</b><br>
A newly allocated vector
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">int 
<span class="currsymbol">length</span>
<script>explorer.outline.addDecl('length');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Determine the 
<span class="currsymbol">length</span>
<script>explorer.outline.addDecl('length');</script>

 of the vector
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">addRow</span>
<script>explorer.outline.addDecl('addRow');</script>

(Matrix!(T) <span class="funcparam">m</span>, int <span class="funcparam">row</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>add number to a column
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">T 
<span class="currsymbol">min</span>
<script>explorer.outline.addDecl('min');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>determine minimum element of vector
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">int 
<span class="currsymbol">minIdx</span>
<script>explorer.outline.addDecl('minIdx');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>determine the index of the minimum element of vector
<br><br>

</dd>
</dl>
<script>explorer.outline.decSymbolLevel();</script>


</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">class 
<span class="currsymbol">
<span class="currsymbol">Matrix</span>
<script>explorer.outline.addDecl('Matrix');</script>

</span>
<script>explorer.outline.addDecl('
<span class="currsymbol">Matrix</span>
<script>explorer.outline.addDecl('Matrix');</script>

');</script>

(T);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>
<span class="currsymbol">Matrix</span>
<script>explorer.outline.addDecl('Matrix');</script>

 template class
<br><br>
Usage patterns:
<br><br>

	1. Template instance alias for convenience
<pre class="d_code">	<font color=blue>private</font> <font color=blue>alias</font> Vector!(<font color=blue>double</font>) DoubleVector;
	<font color=blue>private</font> <font color=blue>alias</font> <u>Matrix</u>!(<font color=blue>double</font>) DoubleMatrix;
</pre>

	2. Create vector instances
<pre class="d_code">  DoubleVector a = <font color=blue>new</font> DoubleVector(1.0, 2.0, 3.0);
  DoubleVector b = <font color=blue>new</font> DoubleVector(2.0, 4.0, 6.0);
</pre>

	3. Dot product
<pre class="d_code">  DoubleMatrix m = <font color=blue>new</font> DoubleMatrix(3, 3, 2.0, 0.0, 0.0,
                                          0.0, 2.0, 0.0,
                                          0.0, 0.0, 2.0);

	DoubleVector d = m * a;
</pre>

	4. 
<span class="currsymbol">Matrix</span>
<script>explorer.outline.addDecl('Matrix');</script>

 multiplication
<pre class="d_code">  DoubleMatrix n = <font color=blue>new</font> DoubleMatrix(3, 3,  1.0, 1.0, 0.0,
                                          -2.0, 3.0, 5.0,
                                           0.0, 1.0, 4.0);

	DoubleMatrix o = m * n;
</pre>

<br><br>


<br><br>


<script>explorer.outline.incSymbolLevel();</script>
<dl>
<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">dup</span>
<script>explorer.outline.addDecl('dup');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Duplicate the matrix
<br><br>
<b>Results:</b><br>
A newly allocated matrix
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">subMatrix</span>
<script>explorer.outline.addDecl('subMatrix');</script>

(int <span class="funcparam">l</span>, int <span class="funcparam">c</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Get a sub matrix by removing a line and a column.
<br><br>
<b>Params:</b><br>
<table><tr>
<td nowrap valign="top" style="padding-right: 8px">int <span class="funcparam">l</span></td>


<td>The line index</td></tr>
<tr>
<td nowrap valign="top" style="padding-right: 8px">int <span class="funcparam">c</span></td>


<td>The column index</td></tr>
</table><br>
<b>Results:</b><br>
A new matrix
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">map</span>
<script>explorer.outline.addDecl('map');</script>

(T delegate(T) <span class="funcparam">fct</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Apply a function to all values of a matrix
<br><br>
<b>Params:</b><br>
<table><tr>
<td nowrap valign="top" style="padding-right: 8px">T delegate(T) <span class="funcparam">fct</span></td>


<td>A function delegate</td></tr>
</table><br>
<b>Results:</b><br>
A new matrix
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Vector!(T) 
<span class="currsymbol">getCol</span>
<script>explorer.outline.addDecl('getCol');</script>

(uint <span class="funcparam">c</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Get a particular vector from a column
<br><br>
<b>Params:</b><br>
<table><tr>
<td nowrap valign="top" style="padding-right: 8px">uint <span class="funcparam">c</span></td>


<td>Column</td></tr>
</table><br>
<b>Results:</b><br>
A new Vector
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Vector!(T) 
<span class="currsymbol">getRow</span>
<script>explorer.outline.addDecl('getRow');</script>

(uint <span class="funcparam">l</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Get a particular vector from a line
<br><br>
<b>Params:</b><br>
<table><tr>
<td nowrap valign="top" style="padding-right: 8px">uint <span class="funcparam">l</span></td>


<td>Line</td></tr>
</table><br>
<b>Results:</b><br>
A new Vector
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">T 
<span class="currsymbol">rowMin</span>
<script>explorer.outline.addDecl('rowMin');</script>

(int <span class="funcparam">row</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>get minimum of a <span class="funcparam">row</span>
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">T 
<span class="currsymbol">colMin</span>
<script>explorer.outline.addDecl('colMin');</script>

(int <span class="funcparam">col</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>get minimum of a column
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">setRow</span>
<script>explorer.outline.addDecl('setRow');</script>

(int <span class="funcparam">row</span>, T <span class="funcparam">value</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>set <span class="funcparam">row</span> values to given <span class="funcparam">value</span>
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">subRow</span>
<script>explorer.outline.addDecl('subRow');</script>

(int <span class="funcparam">row</span>, T <span class="funcparam">value</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>subtract number from a column
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">setCol</span>
<script>explorer.outline.addDecl('setCol');</script>

(int <span class="funcparam">col</span>, T <span class="funcparam">value</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>set column values to given <span class="funcparam">value</span>
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">subCol</span>
<script>explorer.outline.addDecl('subCol');</script>

(int <span class="funcparam">col</span>, T <span class="funcparam">value</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>subtract number from a row
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">T 
<span class="currsymbol">det</span>
<script>explorer.outline.addDecl('det');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Compute the determinant of the matrix
<br><br>
<b>Results:</b><br>
The determinant
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">inv</span>
<script>explorer.outline.addDecl('inv');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Compute the inverse of the matrix. It's determinant must be != 0.
<br><br>
<b>Results:</b><br>
A new matrix
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">pow</span>
<script>explorer.outline.addDecl('pow');</script>

(uint <span class="funcparam">p</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Compute the power <span class="funcparam">p</span> of the matrix
<br><br>
<b>Params:</b><br>
<table><tr>
<td nowrap valign="top" style="padding-right: 8px">uint <span class="funcparam">p</span></td>


<td>Power, must be &gt; 0</td></tr>
</table><br>
<b>Results:</b><br>
A new matrix
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">fill</span>
<script>explorer.outline.addDecl('fill');</script>

(T <span class="funcparam">val</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Fill the matrix with a value
<br><br>
<b>Params:</b><br>
<table><tr>
<td nowrap valign="top" style="padding-right: 8px">T <span class="funcparam">val</span></td>


<td>the value</td></tr>
</table><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">fillDiag</span>
<script>explorer.outline.addDecl('fillDiag');</script>

(T <span class="funcparam">val</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Fill the main diagonal with a value
<br><br>
<b>Params:</b><br>
<table></table><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">transpose</span>
<script>explorer.outline.addDecl('transpose');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Transpose the matrix
<br><br>
<b>Results:</b><br>
A new matrix
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Vector!(T) 
<span class="currsymbol">diagonalize</span>
<script>explorer.outline.addDecl('diagonalize');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Return the diagonal of the matrix as a vector
<br><br>
<b>Results:</b><br>
A new matrix
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">T 
<span class="currsymbol">trace</span>
<script>explorer.outline.addDecl('trace');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Trace of the matrix. (Diagonal sum)
<br><br>
<b>Results:</b><br>
Trace of the matrix. (Diagonal sum)
<br><br>

    
<br><br>


<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">print</span>
<script>explorer.outline.addDecl('print');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Print a matrix to stdout.
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">int 
<span class="currsymbol">matchSize</span>
<script>explorer.outline.addDecl('matchSize');</script>

(Matrix <span class="funcparam">m</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Test if the matrix's dimensions are the same as <span class="funcparam">m</span>'s.
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">setSize</span>
<script>explorer.outline.addDecl('setSize');</script>

(int <span class="funcparam">l</span>, int <span class="funcparam">c</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Change the size of the matrix
<br><br>
<b>Params:</b><br>
<table><tr>
<td nowrap valign="top" style="padding-right: 8px">int <span class="funcparam">l</span></td>


<td>new line number</td></tr>
<tr>
<td nowrap valign="top" style="padding-right: 8px">int <span class="funcparam">c</span></td>


<td>new col number</td></tr>
</table><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">opAddAssign</span>
<script>explorer.outline.addDecl('opAddAssign');</script>

(Matrix <span class="funcparam">mat</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Addition with assignation: A += B;
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">opSubAssign</span>
<script>explorer.outline.addDecl('opSubAssign');</script>

(Matrix <span class="funcparam">mat</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Substraction with assignation: A -= B;
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">opAdd</span>
<script>explorer.outline.addDecl('opAdd');</script>

(Matrix <span class="funcparam">mat</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Addition of two Matrix A + B
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">opSub</span>
<script>explorer.outline.addDecl('opSub');</script>

(Matrix <span class="funcparam">mat</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Substraction of two Matrix A - B
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">T 
<span class="currsymbol">opIndex</span>
<script>explorer.outline.addDecl('opIndex');</script>

(int <span class="funcparam">l</span>, int <span class="funcparam">c</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Get a value: T a = M[<span class="funcparam">l</span>,<span class="funcparam">c</span>];
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">opIndexAssign</span>
<script>explorer.outline.addDecl('opIndexAssign');</script>

(T <span class="funcparam">val</span>, int <span class="funcparam">l</span>, int <span class="funcparam">c</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Set a value: M[<span class="funcparam">l</span>,<span class="funcparam">c</span>] = d;
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">opMul</span>
<script>explorer.outline.addDecl('opMul');</script>

(Matrix <span class="funcparam">mat</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Multiplication of two matrixes: A * B
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">opMulAssign</span>
<script>explorer.outline.addDecl('opMulAssign');</script>

(Matrix <span class="funcparam">mat</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Multiplication and assignation: A *= B
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">opMul_r</span>
<script>explorer.outline.addDecl('opMul_r');</script>

(T <span class="funcparam">scal</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Left scalar multiplication: s * A
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">opMul</span>
<script>explorer.outline.addDecl('opMul');</script>

(T <span class="funcparam">scal</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Right scalar multiplication: A * s
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">void 
<span class="currsymbol">opMulAssign</span>
<script>explorer.outline.addDecl('opMulAssign');</script>

(T <span class="funcparam">scal</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Scalar multiplication with assignation: A *= s;
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">bool 
<span class="currsymbol">opEquals</span>
<script>explorer.outline.addDecl('opEquals');</script>

(Matrix <span class="funcparam">mat</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Test equality of two matrixes: A == B
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">Matrix 
<span class="currsymbol">opNeg</span>
<script>explorer.outline.addDecl('opNeg');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Unary minus operator: -A
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">int 
<span class="currsymbol">opApply</span>
<script>explorer.outline.addDecl('opApply');</script>

(int delegate(inout T) <span class="funcparam">dg</span>);
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>This enables foreach statements
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">int 
<span class="currsymbol">Rows</span>
<script>explorer.outline.addDecl('Rows');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Number of 
<span class="currsymbol">Rows</span>
<script>explorer.outline.addDecl('Rows');</script>

.
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">int 
<span class="currsymbol">Columns</span>
<script>explorer.outline.addDecl('Columns');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>Number of columns.
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">int 
<span class="currsymbol">isSquare</span>
<script>explorer.outline.addDecl('isSquare');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>True if the matrix is square, False otherwise.
<br><br>

</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">bool 
<span class="currsymbol">isZero</span>
<script>explorer.outline.addDecl('isZero');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd><br><br>
</dd>

<script>explorer.outline.writeEnabled = true;</script>
<dt><span class="decl">T[] 
<span class="currsymbol">Data</span>
<script>explorer.outline.addDecl('Data');</script>

();
</span></dt>
<script>explorer.outline.writeEnabled = false;</script>


<dd>
<span class="currsymbol">Data</span>
<script>explorer.outline.addDecl('Data');</script>

 table access.
<br><br>

</dd>
</dl>
<script>explorer.outline.decSymbolLevel();</script>


</dd>
</dl>
<script>explorer.outline.decSymbolLevel();</script>


</td></tr>
        <tr><td id="docfooter">
            Page was generated with
            <img src="candydoc/img/candydoc.gif" style="vertical-align:middle; position:relative; top:-1px">
            on Mon May 15 23:45:43 2006

        </td></tr>
    </table>
</div>
<script>
	explorer.packageExplorer.addModule("nova.ds.intrusive.aggregate");

	explorer.packageExplorer.addModule("nova.ds.intrusive.doublelink");

	explorer.packageExplorer.addModule("nova.ds.intrusive.doublelinkedlist");

	explorer.packageExplorer.addModule("nova.ds.intrusive.redblacktree");

	explorer.packageExplorer.addModule("nova.ds.intrusive.singlelinkedlist");

	explorer.packageExplorer.addModule("nova.math.matrix");

	explorer.packageExplorer.addModule("nova.math.optimization.partitionedbooleanquadric");

	explorer.packageExplorer.addModule("nova.ds.graph.weighted");
</script>
</body></html>


