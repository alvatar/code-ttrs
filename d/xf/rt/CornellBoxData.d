module xf.rt.CornellBoxData;

private {
	import xf.rt.Spectrum : Spectrum;
	import xf.omg.core.LinearAlgebra;	
	import tango.stdc.stdlib : alloca;
	extern (C) int printf(char*, ...);
}



struct Camera {
	static const:
	
	vec3 position = { x: 278, y: 273, z: -800 };
	vec3 direction = { x: 0, y: 0, z: 1 };
	vec3 upDirection = { x: 0, y: 1, z: 0 };
	float focalLength = 0.035;
	float width = 0.025;
	float height = 0.025;
}



// [400 ; 700] nm wavelenghts, step = 4nm
float[] white_ = [
	0.343,
	0.445,
	0.551,
	0.624,
	0.665,
	0.687,
	0.708,
	0.723,
	0.715,
	0.710,
	0.745,
	0.758,
	0.739,
	0.767,
	0.777,
	0.765,
	0.751,
	0.745,
	0.748,
	0.729,
	0.745,
	0.757,
	0.753,
	0.750,
	0.746,
	0.747,
	0.735,
	0.732,
	0.739,
	0.734,
	0.725,
	0.721,
	0.733,
	0.725,
	0.732,
	0.743,
	0.744,
	0.748,
	0.728,
	0.716,
	0.733,
	0.726,
	0.713,
	0.740,
	0.754,
	0.764,
	0.752,
	0.736,
	0.734,
	0.741,
	0.740,
	0.732,
	0.745,
	0.755,
	0.751,
	0.744,
	0.731,
	0.733,
	0.744,
	0.731,
	0.712,
	0.708,
	0.729,
	0.730,
	0.727,
	0.707,
	0.703,
	0.729,
	0.750,
	0.760,
	0.751,
	0.739,
	0.724,
	0.730,
	0.740,
	0.737
];

float[] green_ = [
	0.092,
	0.096,
	0.098,
	0.097,
	0.098,
	0.095,
	0.095,
	0.097,
	0.095,
	0.094,
	0.097,
	0.098,
	0.096,
	0.101,
	0.103,
	0.104,
	0.107,
	0.109,
	0.112,
	0.115,
	0.125,
	0.140,
	0.160,
	0.187,
	0.229,
	0.285,
	0.343,
	0.390,
	0.435,
	0.464,
	0.472,
	0.476,
	0.481,
	0.462,
	0.447,
	0.441,
	0.426,
	0.406,
	0.373,
	0.347,
	0.337,
	0.314,
	0.285,
	0.277,
	0.266,
	0.250,
	0.230,
	0.207,
	0.186,
	0.171,
	0.160,
	0.148,
	0.141,
	0.136,
	0.130,
	0.126,
	0.123,
	0.121,
	0.122,
	0.119,
	0.114,
	0.115,
	0.117,
	0.117,
	0.118,
	0.120,
	0.122,
	0.128,
	0.132,
	0.139,
	0.144,
	0.146,
	0.150,
	0.152,
	0.157,
	0.159
];

float[] red_ = [
	0.040,
	0.046,
	0.048,
	0.053,
	0.049,
	0.050,
	0.053,
	0.055,
	0.057,
	0.056,
	0.059,
	0.057,
	0.061,
	0.061,
	0.060,
	0.062,
	0.062,
	0.062,
	0.061,
	0.062,
	0.060,
	0.059,
	0.057,
	0.058,
	0.058,
	0.058,
	0.056,
	0.055,
	0.056,
	0.059,
	0.057,
	0.055,
	0.059,
	0.059,
	0.058,
	0.059,
	0.061,
	0.061,
	0.063,
	0.063,
	0.067,
	0.068,
	0.072,
	0.080,
	0.090,
	0.099,
	0.124,
	0.154,
	0.192,
	0.255,
	0.287,
	0.349,
	0.402,
	0.443,
	0.487,
	0.513,
	0.558,
	0.584,
	0.620,
	0.606,
	0.609,
	0.651,
	0.612,
	0.610,
	0.650,
	0.638,
	0.627,
	0.620,
	0.630,
	0.628,
	0.642,
	0.639,
	0.657,
	0.639,
	0.635,
	0.642
];


private void makeSpectrum(Spectrum)(float[] refl, float minW, float maxW, ref Spectrum spectrum) {
	float[] wlen = (cast(float*)alloca(float.sizeof * refl.length))[0..refl.length];

	foreach (i, ref w; wlen) {
		w = minW + (maxW - minW) * i / (refl.length - 1);
	}
	
	spectrum = Spectrum.fromWavelengths(wlen, refl);
	
	static if (is(typeof(spectrum.rgb))) {
		auto c = spectrum.rgb;
		printf("spectrum: %f %f %f\n", c.r, c.g, c.b);
	}
}


struct Reflectances {
	static:	
	
	/+float func_(alias refl)(RGBSpectrum wavelen) {
		/+if (wavelen < 400) return 0.f;
		if (wavelen > 700) return 0.f;
		return refl[cast(int)((wavelen - 400) / 4)];+/
		return .8f;
	}
	
	alias func_!(white_)	white;
	alias func_!(green_)	green;
	alias func_!(red_)		red;+/
	Spectrum.FullSpectrum	white;
	Spectrum.FullSpectrum	green;
	Spectrum.FullSpectrum	red;
	
	static this() {
		makeSpectrum(white_, 400.f, 700.f, white);
		makeSpectrum(green_, 400.f, 700.f, green);
		makeSpectrum(red_, 400.f, 700.f, red);
	}
}


struct Light {
	static const:
	
	float[] emission = [
		0.f,			// 400nm
		8.f,			// 500nm
		15.6f,		// 600nm
		18.4f			// 700nm
	];
	
	float reflectance = 0.78;
}


struct Quad {
	enum Material {
		White, Green, Red
	}

	Material	material_;
	vec3 	v[4];
	Spectrum.FullSpectrum material() {
		switch (material_) {
			case Material.White:	return Reflectances.white;
			case Material.Green:	return Reflectances.green;
			case Material.Red:		return Reflectances.red;
		}
	}
}


Quad[] surfaces = [
	// floor
	{ Quad.Material.White, [{x: 552.8, y: 0.0, z: 0.0 }, {x: 0.0, y: 0.0, z: 0.0 }, {x: 0.0, y: 0.0, z: 559.2 }, {x: 549.6, y: 0.0, z: 559.2 }] },
	
	// ceiling
	{ Quad.Material.White, [{x:556.0, y:548.8, z:0.0 }, {x:556.0, y:548.8, z:559.2 }, {x: 0.0, y:548.8, z:559.2 }, {x:0.0, y:548.8, z:0.0 }] },

	// back wall
	{ Quad.Material.White, [{x:549.6, y:0.0, z:559.2 }, {x:0.0, y:0.0, z:559.2 }, {x:0.0, y:548.8, z:559.2 }, {x:556.0, y:548.8, z:559.2}] },

	// right wall
	{ Quad.Material.Green, [{x:0.0, y:0.0, z:559.2}, {x:0.0, y:0.0, z:0.0}, {x:0.0, y:548.8, z:0.0}, {x:0.0, y:548.8, z:559.2}] },
	
	// left wall
	{ Quad.Material.Red, [{x:552.8, y:0.0, z:0.0}, {x:549.6, y:0.0, z:559.2}, {x:556.0, y:548.8, z:559.2}, {x:556.0, y:548.8, z:0.0}] }/+,
	
	
	// short block
	{ Quad.Material.White, [{x:130.0, y:165.0, z:65.0}, {x:82.0, y:165.0, z:225.0}, {x:240.0, y:165.0, z:272.0}, {x:290.0, y:165.0, z:114.0}] },
	{ Quad.Material.White, [{x:290.0, y:0.0, z:114.0}, {x:290.0, y:165.0, z:114.0}, {x:240.0, y:165.0, z:272.0}, {x:240.0, y:0.0, z:272.0}] },
	{ Quad.Material.White, [{x:130.0, y:0.0, z:65.0}, {x:130.0, y:165.0, z:65.0}, {x:290.0, y:165.0, z:114.0}, {x:290.0, y:0.0, z:114.0}] },
	{ Quad.Material.White, [{x:82.0, y:0.0, z:225.0}, {x:82.0, y:165.0, z:225.0}, {x:130.0, y:165.0, z:65.0}, {x:130.0, y:0.0, z:65.0}] },
	{ Quad.Material.White, [{x:240.0, y:0.0, z:272.0}, {x:240.0, y:165.0, z:272.0}, {x:82.0, y:165.0, z:225.0}, {x:82.0, y:0.0, z:225.0}] },
	
	// tall block
	{ Quad.Material.White, [{x:423.0, y:330.0, z:247.0}, {x:265.0, y:330.0, z:296.0}, {x:314.0, y:330.0, z:456.0}, {x:472.0, y:330.0, z:406.0}] },
	{ Quad.Material.White, [{x:423.0, y:0.0, z:247.0}, {x:423.0, y:330.0, z:247.0}, {x:472.0, y:330.0, z:406.0}, {x:472.0, y:0.0, z:406.0}] },
	{ Quad.Material.White, [{x:472.0, y:0.0, z:406.0}, {x:472.0, y:330.0, z:406.0}, {x:314.0, y:330.0, z:456.0}, {x:314.0, y:0.0, z:456.0}] },
	{ Quad.Material.White, [{x:314.0, y:0.0, z:456.0}, {x:314.0, y:330.0, z:456.0}, {x:265.0, y:330.0, z:296.0}, {x:265.0, y:0.0, z:296.0}] },
	{ Quad.Material.White, [{x:265.0, y:0.0, z:296.0}, {x:265.0, y:330.0, z:296.0}, {x:423.0, y:330.0, z:247.0}, {x:423.0, y:0.0, z:247.0}] }+/
];


Quad light = { Quad.Material.White, [{x:343.0, y:548.8, z:227.0}, {x:343.0, y:548.8, z:332.0}, {x:213.0, y:548.8, z:332.0}, {x:213.0, y:548.8, z:227.0}]};


float[] emissionIntens = [
	4.9284,
	4.9502,
	4.8717,
	4.8504,
	4.8548,
	4.8096,
	4.7783,
	4.7512,
	4.6976,
	4.6665,
	4.6552,
	4.6344,
	4.6111,
	4.5854,
	4.5055,
	4.4633,
	4.454,
	4.465,
	4.4177,
	4.3984,
	4.409,
	4.3191,
	4.2916,
	4.2349,
	4.2192,
	4.195,
	4.1477,
	4.1273,
	4.0953,
	4.0521,
	4.0064,
	3.9981,
	3.946,
	3.9053,
	3.8919,
	3.8419,
	3.8073,
	3.7706,
	3.7608,
	3.6872,
	3.6704,
	3.6455,
	3.604,
	3.6025,
	3.5917,
	3.5777,
	3.5753,
	3.5439,
	3.5514,
	3.5369,
	3.5405,
	3.5345,
	3.5462,
	3.5481,
	3.5402,
	3.5828,
	3.6249,
	3.6076,
	3.6125,
	3.6554,
	3.6924,
	3.7022,
	3.7309,
	3.7515,
	3.7614,
	3.7912,
	3.7886,
	3.8154,
	3.7976,
	3.8035,
	3.8141,
	3.8167,
	3.8216,
	3.8232,
	3.824,
	3.8233,
	3.8195,
	3.8352,
	3.8384,
	3.8522,
	3.8612,
	3.8879,
	3.909,
	3.9477,
	3.9761,
	4.0019,
	4.046,
	4.0922,
	4.1222,
	4.1505,
	4.1898,
	4.2128,
	4.2603,
	4.2928,
	4.333,
	4.3583,
	4.385,
	4.4254,
	4.4389,
	4.4626,
	4.4839,
	4.526,
	4.5398,
	4.5666,
	4.5949,
	4.6279,
	4.6567,
	4.6911,
	4.7225,
	4.7405,
	4.7688,
	4.8089,
	4.8238,
	4.8442,
	4.8629,
	4.8786,
	4.891,
	4.9042,
	4.9146,
	4.9395,
	4.9568,
	4.979,
	5.0144,
	5.0396,
	5.0598,
	5.0876,
	5.1263,
	5.1571,
	5.2105,
	5.251,
	5.3032,
	5.3616,
	5.41,
	5.4736,
	5.5262,
	5.579,
	5.6245,
	5.6737,
	5.7268,
	5.7742,
	5.8206,
	5.857,
	5.8987,
	5.9198,
	5.9362,
	5.9727,
	5.9925,
	6.006,
	6.0239,
	6.035,
	6.0518,
	6.0618,
	6.0715,
	6.0841,
	6.1082,
	6.1241,
	6.1499,
	6.178,
	6.2101,
	6.2472,
	6.2944,
	6.3403,
	6.3956,
	6.4572,
	6.5315,
	6.5913,
	6.6491,
	6.7209,
	6.8012,
	6.8731,
	6.9345,
	7.0142,
	7.0773,
	7.1503,
	7.2266,
	7.2961,
	7.3552,
	7.4157,
	7.4759,
	7.5322,
	7.5836,
	7.6331,
	7.6937,
	7.725,
	7.7644,
	7.8137,
	7.8674,
	7.9042,
	7.9458,
	7.9967,
	8.0424,
	8.0919,
	8.1318,
	8.1975,
	8.2372,
	8.3061,
	8.3476,
	8.4038,
	8.4585,
	8.5069,
	8.5588,
	8.622,
	8.6702,
	8.7258,
	8.7765,
	8.827,
	8.8723,
	8.923,
	8.9618,
	8.9996,
	9.0219,
	9.0702,
	9.1417,
	9.1765,
	9.235,
	9.2708,
	9.3313,
	9.3755,
	9.4269,
	9.4717,
	9.525,
	9.5923,
	9.6345,
	9.7102,
	9.7554,
	9.8163,
	9.8544,
	9.9201,
	9.9708,
	10.034,
	10.091,
	10.134,
	10.178,
	10.218,
	10.267,
	10.291,
	10.342,
	10.378,
	10.414,
	10.445,
	10.486,
	10.532,
	10.565,
	10.62,
	10.659,
	10.697,
	10.763,
	10.799,
	10.857,
	10.926,
	10.983,
	11.063,
	11.14,
	11.215,
	11.302,
	11.367,
	11.458,
	11.523,
	11.611,
	11.698,
	11.775,
	11.868,
	11.933,
	12.006,
	12.068,
	12.152,
	12.219,
	12.28,
	12.357,
	12.416,
	12.47,
	12.525,
	12.586,
	12.654,
	12.694,
	12.747,
	12.802,
	12.841,
	12.907,
	12.961,
	13.013,
	13.066,
	13.116,
	13.183,
	13.24,
	13.292,
	13.382,
	13.433,
	13.504,
	13.557,
	13.62,
	13.672,
	13.72,
	13.78,
	13.832,
	13.844,
	13.895,
	13.933,
	13.988,
	14.021,
	14.065,
	14.096,
	14.143,
	14.184,
	14.218,
	14.258,
	14.297,
	14.332,
	14.378,
	14.421,
	14.45,
	14.507,
	14.561,
	14.621,
	14.685,
	14.735,
	14.809,
	14.888,
	14.946,
	15.026,
	15.112,
	15.197,
	15.277,
	15.366,
	15.452,
	15.538,
	15.648,
	15.725,
	15.814,
	15.927,
	16.017,
	16.116,
	16.209,
	16.292,
	16.394,
	16.471,
	16.559,
	16.626,
	16.708,
	16.787,
	16.831,
	16.91,
	16.983,
	17.049,
	17.113,
	17.18,
	17.224,
	17.303,
	17.357,
	17.431,
	17.482,
	17.557,
	17.605,
	17.655,
	17.714,
	17.786,
	17.857,
	17.921,
	17.992,
	18.067,
	18.134,
	18.213,
	18.29,
	18.33,
	18.397,
	18.457,
	18.524,
	18.575,
	18.627,
	18.678,
	18.752,
	18.805,
	18.875,
	18.912,
	18.966,
	19.017,
	19.046,
	19.102,
	19.145,
	19.19,
	19.239,
	19.268,
	19.314,
	19.365,
	19.401,
	19.46,
	19.521,
	19.582,
	19.632,
	19.703,
	19.771,
	19.804,
	19.86,
	19.937,
	20.023,
	20.087,
	20.159,
	20.234,
	20.306,
	20.401,
	20.483,
	20.579,
	20.656,
	20.737,
	20.82,
	20.899,
	20.995,
	21.09,
	21.162,
	21.223,
	21.28,
	21.34,
	21.402,
	21.474,
	21.553,
	21.591,
	21.626,
	21.675,
	21.707,
	21.759,
	21.755,
	21.779,
	21.803,
	21.824,
	21.847,
	21.839,
	21.827,
	21.818,
	21.838,
	21.827,
	21.822,
	21.832,
	21.814,
	21.801,
	21.817,
	21.817,
	21.828,
	21.825,
	21.841,
	21.853,
	21.89,
	21.919,
	21.939,
	21.971,
	22.016,
	22.075,
	22.109,
	22.19,
	22.274,
	22.36,
	22.408,
	22.458,
	22.553,
	22.612,
	22.681,
	22.782,
	22.835,
	22.938,
	23.024,
	23.119,
	23.2,
	23.308,
	23.369,
	23.473,
	23.555,
	23.666,
	23.746,
	23.85,
	23.91,
	23.982,
	24.079,
	24.147,
	24.227,
	24.289,
	24.341,
	24.39,
	24.456,
	24.483,
	24.567,
	24.594,
	24.628,
	24.67,
	24.675,
	24.684,
	24.709,
	24.688,
	24.681,
	24.689,
	24.692,
	24.684,
	24.68,
	24.665,
	24.664,
	24.722,
	24.814,
	24.808,
	24.826,
	24.843,
	24.861,
	24.887,
	24.92,
	24.969,
	25.032,
	25.081,
	25.152,
	25.212,
	25.297,
	25.405,
	25.483,
	25.567,
	25.686,
	25.809,
	25.913,
	26.035,
	26.169,
	26.281,
	26.45,
	26.587,
	26.74,
	26.887,
	27.026,
	27.189,
	27.386,
	27.526,
	27.689,
	27.867,
	28.048,
	28.192,
	28.379,
	28.565,
	28.68,
	28.863,
	29.004,
	29.181,
	29.337,
	29.492,
	29.651,
	29.783,
	29.918,
	30.036,
	30.177,
	30.304,
	30.456,
	30.531,
	30.672,
	30.78,
	30.892,
	30.966,
	31.072,
	31.157,
	31.204,
	31.304,
	31.404,
	31.436,
	31.528,
	31.601,
	31.726,
	31.796,
	31.868,
	31.949,
	32.025,
	32.14,
	32.204,
	32.28,
	32.284,
	32.405,
	32.467,
	32.53,
	32.634,
	32.681,
	32.773,
	32.901,
	33.021,
	33.151,
	33.164,
	33.231,
	33.283,
	33.355,
	33.439,
	33.609,
	33.7,
	33.797,
	33.852,
	33.947,
	33.96,
	34.055,
	34.101,
	34.182,
	34.25,
	34.322,
	34.396,
	34.46,
	34.517,
	34.552,
	34.597,
	34.65,
	34.704,
	34.728,
	34.774,
	34.81,
	34.858,
	34.909,
	34.923,
	34.939,
	34.966,
	35.022,
	35.063,
	35.111,
	35.141,
	35.162,
	35.203,
	35.249,
	35.293,
	35.374,
	35.377,
	35.469,
	35.522,
	35.562,
	35.61,
	35.66,
	35.733,
	35.762,
	35.868,
	35.918,
	36.026,
	36.104,
	36.205,
	36.32,
	36.435,
	36.533,
	36.67,
	36.794,
	36.855,
	36.951,
	37.054,
	37.151,
	37.292,
	37.364,
	37.441,
	37.492,
	37.577,
	37.647,
	37.711,
	37.825,
	37.915,
	37.991,
	38.095,
	38.158,
	38.236,
	38.322,
	38.431,
	38.537,
	38.625,
	38.731,
	38.813,
	38.903,
	38.954,
	39.066,
	39.135,
	39.226,
	39.24,
	39.305,
	39.361,
	39.405,
	39.478,
	39.576,
	39.622,
	39.682,
	39.737,
	39.799,
	39.858,
	39.927,
	40,
	40.062,
	40.116,
	40.183,
	40.24,
	40.32,
	40.403,
	40.474,
	40.548,
	40.617,
	40.664,
	40.74,
	40.799,
	40.851,
	40.893,
	40.927,
	41.029,
	41.079,
	41.152,
	41.207,
	41.228,
	41.303,
	41.375,
	41.436,
	41.532,
	41.624,
	41.677,
	41.706,
	41.794,
	41.872,
	41.967,
	41.961,
	42.002,
	42.067,
	42.145,
	42.172,
	42.213,
	42.297,
	42.28,
	42.335,
	42.422,
	42.453,
	42.527,
	42.624,
	42.651,
	42.695,
	42.765,
	42.769,
	42.842,
	42.883,
	42.935,
	42.93,
	42.969,
	43.031,
	43.068,
	43.079,
	43.119,
	43.146,
	43.212,
	43.223,
	43.232,
	43.279,
	43.335,
	43.332,
	43.387,
	43.475,
	43.49,
	43.534,
	43.52,
	43.543,
	43.585,
	43.651,
	43.68,
	43.777,
	43.822,
	43.871,
	43.899,
	43.909,
	43.939,
	43.943,
	44.002,
	44.06,
	44.085,
	44.15,
	44.164,
	44.216,
	44.246,
	44.314,
	44.376,
	44.443,
	44.467,
	44.55,
	44.618,
	44.627,
	44.688,
	44.756,
	44.82,
	44.867,
	44.937,
	44.943,
	45.003,
	45.061,
	45.101,
	45.125,
	45.19,
	45.228,
	45.283,
	45.33,
	45.402,
	45.41,
	45.45,
	45.499,
	45.557,
	45.576,
	45.658,
	45.711,
	45.736,
	45.752,
	45.788,
	45.848,
	45.996,
	46.203,
	46.22,
	46.278,
	46.328,
	46.355,
	46.435,
	46.505,
	46.462,
	46.26,
	46.238,
	46.306,
	46.365,
	46.377,
	46.453,
	46.505,
	46.558,
	46.668,
	46.77,
	46.822,
	46.84,
	46.804,
	46.838,
	46.86,
	46.92,
	46.917,
	46.99,
	47.005,
	47.013,
	47.071,
	47.053,
	47.102,
	47.149,
	47.188,
	47.203,
	47.191,
	47.245,
	47.278,
	47.245,
	47.266,
	47.291,
	47.38,
	47.365,
	47.409,
	47.426,
	47.44,
	47.495,
	47.51,
	47.602,
	47.591,
	47.606,
	47.721,
	47.731,
	47.774,
	47.802,
	47.824,
	47.895,
	47.914,
	47.957,
	47.99,
	48.008,
	48.072,
	48.111,
	48.183,
	48.204,
	48.259,
	48.285,
	48.308,
	48.332,
	48.385,
	48.408,
	48.417,
	48.438,
	48.47,
	48.531,
	48.569,
	48.626,
	48.611,
	48.613,
	48.64,
	48.647,
	48.735,
	48.711,
	48.725,
	48.652,
	48.715,
	48.673,
	48.708,
	48.691,
	48.76,
	48.716,
	48.853,
	48.827,
	48.867,
	48.897,
	48.892,
	48.904,
	48.861,
	48.987,
	48.91,
	48.909,
	48.962,
	48.988,
	48.901,
	48.98,
	49.117,
	49.124,
	49.165,
	49.154,
	49.205,
	49.195,
	49.175,
	49.177,
	49.078,
	49.067,
	49.081,
	49.081,
	49.129,
	49.208,
	49.172,
	49.222,
	49.257,
	49.226,
	49.295,
	49.266,
	49.199,
	49.297,
	49.212,
	49.263,
	49.257,
	49.17,
	49.165,
	49.168,
	49.122,
	49.194,
	49.15,
	49.135,
	49.099,
	49.083,
	49.103,
	49.028,
	49.056,
	49.007,
	48.935,
	48.993,
	48.852,
	48.826,
	48.842,
	48.694,
	48.809,
	48.856,
	48.739,
	48.808,
	48.648,
	48.574,
	48.566,
	48.504,
	48.359,
	48.244,
	48.214,
	48.145,
	47.997,
	47.981,
	47.874,
	47.816,
	47.682,
	47.66,
	47.554,
	47.416,
	47.327,
	47.239,
	47.093,
	47.016,
	46.87,
	46.811,
	46.613,
	46.482,
	46.301,
	46.179,
	46.021,
	45.821,
	45.74,
	45.591,
	45.355,
	45.195,
	45.023,
	44.883,
	44.602,
	44.42,
	44.195,
	43.954,
	43.688,
	43.501,
	43.183,
	42.942,
	42.693,
	42.386,
	42.161,
	41.864,
	41.481,
	41.209,
	40.86,
	40.518,
	40.191,
	39.891,
	39.561,
	39.088,
	38.804,
	38.461,
	38.036,
	37.746,
	37.286,
	36.932,
	36.511,
	36.083,
	35.714,
	35.312,
	34.866,
	34.505,
	34.021,
	33.658,
	33.234,
	32.762,
	32.346,
	31.953,
	31.531,
	31.166,
	30.722,
	30.31,
	29.883,
	29.486,
	29.156
];


float[] emissionWavelengths = [
	386,
	386.32,
	386.64,
	386.95,
	387.27,
	387.59,
	387.91,
	388.22,
	388.54,
	388.86,
	389.18,
	389.49,
	389.81,
	390.13,
	390.45,
	390.76,
	391.08,
	391.4,
	391.72,
	392.03,
	392.35,
	392.67,
	392.99,
	393.3,
	393.62,
	393.94,
	394.26,
	394.58,
	394.89,
	395.21,
	395.53,
	395.85,
	396.16,
	396.48,
	396.8,
	397.12,
	397.43,
	397.75,
	398.07,
	398.39,
	398.7,
	399.02,
	399.34,
	399.66,
	399.97,
	400.29,
	400.61,
	400.93,
	401.24,
	401.56,
	401.88,
	402.2,
	402.52,
	402.83,
	403.15,
	403.47,
	403.79,
	404.1,
	404.42,
	404.74,
	405.06,
	405.37,
	405.69,
	406.01,
	406.33,
	406.64,
	406.96,
	407.28,
	407.6,
	407.91,
	408.23,
	408.55,
	408.87,
	409.18,
	409.5,
	409.82,
	410.14,
	410.46,
	410.77,
	411.09,
	411.41,
	411.73,
	412.04,
	412.36,
	412.68,
	413,
	413.31,
	413.63,
	413.95,
	414.27,
	414.58,
	414.9,
	415.22,
	415.54,
	415.85,
	416.17,
	416.49,
	416.81,
	417.12,
	417.44,
	417.76,
	418.08,
	418.4,
	418.71,
	419.03,
	419.35,
	419.67,
	419.98,
	420.3,
	420.62,
	420.94,
	421.25,
	421.57,
	421.89,
	422.21,
	422.52,
	422.84,
	423.16,
	423.48,
	423.79,
	424.11,
	424.43,
	424.75,
	425.06,
	425.38,
	425.7,
	426.02,
	426.34,
	426.65,
	426.97,
	427.29,
	427.61,
	427.92,
	428.24,
	428.56,
	428.88,
	429.19,
	429.51,
	429.83,
	430.15,
	430.46,
	430.78,
	431.1,
	431.42,
	431.73,
	432.05,
	432.37,
	432.69,
	433,
	433.32,
	433.64,
	433.96,
	434.28,
	434.59,
	434.91,
	435.23,
	435.55,
	435.86,
	436.18,
	436.5,
	436.82,
	437.13,
	437.45,
	437.77,
	438.09,
	438.4,
	438.72,
	439.04,
	439.36,
	439.67,
	439.99,
	440.31,
	440.63,
	440.94,
	441.26,
	441.58,
	441.9,
	442.22,
	442.53,
	442.85,
	443.17,
	443.49,
	443.8,
	444.12,
	444.44,
	444.76,
	445.07,
	445.39,
	445.71,
	446.03,
	446.34,
	446.66,
	446.98,
	447.3,
	447.61,
	447.93,
	448.25,
	448.57,
	448.88,
	449.2,
	449.52,
	449.84,
	450.16,
	450.47,
	450.79,
	451.11,
	451.43,
	451.74,
	452.06,
	452.38,
	452.7,
	453.01,
	453.33,
	453.65,
	453.97,
	454.28,
	454.6,
	454.92,
	455.24,
	455.55,
	455.87,
	456.19,
	456.51,
	456.82,
	457.14,
	457.46,
	457.78,
	458.1,
	458.41,
	458.73,
	459.05,
	459.37,
	459.68,
	460,
	460.32,
	460.64,
	460.95,
	461.27,
	461.59,
	461.91,
	462.22,
	462.54,
	462.86,
	463.18,
	463.49,
	463.81,
	464.13,
	464.45,
	464.76,
	465.08,
	465.4,
	465.72,
	466.04,
	466.35,
	466.67,
	466.99,
	467.31,
	467.62,
	467.94,
	468.26,
	468.58,
	468.89,
	469.21,
	469.53,
	469.85,
	470.16,
	470.48,
	470.8,
	471.12,
	471.43,
	471.75,
	472.07,
	472.39,
	472.7,
	473.02,
	473.34,
	473.66,
	473.98,
	474.29,
	474.61,
	474.93,
	475.25,
	475.56,
	475.88,
	476.2,
	476.52,
	476.83,
	477.15,
	477.47,
	477.79,
	478.1,
	478.42,
	478.74,
	479.06,
	479.37,
	479.69,
	480.01,
	480.33,
	480.64,
	480.96,
	481.28,
	481.6,
	481.92,
	482.23,
	482.55,
	482.87,
	483.19,
	483.5,
	483.82,
	484.14,
	484.46,
	484.77,
	485.09,
	485.41,
	485.73,
	486.04,
	486.36,
	486.68,
	487,
	487.31,
	487.63,
	487.95,
	488.27,
	488.58,
	488.9,
	489.22,
	489.54,
	489.86,
	490.17,
	490.49,
	490.81,
	491.13,
	491.44,
	491.76,
	492.08,
	492.4,
	492.71,
	493.03,
	493.35,
	493.67,
	493.98,
	494.3,
	494.62,
	494.94,
	495.25,
	495.57,
	495.89,
	496.21,
	496.52,
	496.84,
	497.16,
	497.48,
	497.8,
	498.11,
	498.43,
	498.75,
	499.07,
	499.38,
	499.7,
	500.02,
	500.34,
	500.65,
	500.97,
	501.29,
	501.61,
	501.92,
	502.24,
	502.56,
	502.88,
	503.19,
	503.51,
	503.83,
	504.15,
	504.46,
	504.78,
	505.1,
	505.42,
	505.74,
	506.05,
	506.37,
	506.69,
	507.01,
	507.32,
	507.64,
	507.96,
	508.28,
	508.59,
	508.91,
	509.23,
	509.55,
	509.86,
	510.18,
	510.5,
	510.82,
	511.13,
	511.45,
	511.77,
	512.09,
	512.4,
	512.72,
	513.04,
	513.36,
	513.68,
	513.99,
	514.31,
	514.63,
	514.95,
	515.26,
	515.58,
	515.9,
	516.22,
	516.53,
	516.85,
	517.17,
	517.49,
	517.8,
	518.12,
	518.44,
	518.76,
	519.07,
	519.39,
	519.71,
	520.03,
	520.34,
	520.66,
	520.98,
	521.3,
	521.62,
	521.93,
	522.25,
	522.57,
	522.89,
	523.2,
	523.52,
	523.84,
	524.16,
	524.47,
	524.79,
	525.11,
	525.43,
	525.74,
	526.06,
	526.38,
	526.7,
	527.01,
	527.33,
	527.65,
	527.97,
	528.28,
	528.6,
	528.92,
	529.24,
	529.56,
	529.87,
	530.19,
	530.51,
	530.83,
	531.14,
	531.46,
	531.78,
	532.1,
	532.41,
	532.73,
	533.05,
	533.37,
	533.68,
	534,
	534.32,
	534.64,
	534.95,
	535.27,
	535.59,
	535.91,
	536.22,
	536.54,
	536.86,
	537.18,
	537.5,
	537.81,
	538.13,
	538.45,
	538.77,
	539.08,
	539.4,
	539.72,
	540.04,
	540.35,
	540.67,
	540.99,
	541.31,
	541.62,
	541.94,
	542.26,
	542.58,
	542.89,
	543.21,
	543.53,
	543.85,
	544.16,
	544.48,
	544.8,
	545.12,
	545.44,
	545.75,
	546.07,
	546.39,
	546.71,
	547.02,
	547.34,
	547.66,
	547.98,
	548.29,
	548.61,
	548.93,
	549.25,
	549.56,
	549.88,
	550.2,
	550.52,
	550.83,
	551.15,
	551.47,
	551.79,
	552.1,
	552.42,
	552.74,
	553.06,
	553.38,
	553.69,
	554.01,
	554.33,
	554.65,
	554.96,
	555.28,
	555.6,
	555.92,
	556.23,
	556.55,
	556.87,
	557.19,
	557.5,
	557.82,
	558.14,
	558.46,
	558.77,
	559.09,
	559.41,
	559.73,
	560.04,
	560.36,
	560.68,
	561,
	561.32,
	561.63,
	561.95,
	562.27,
	562.59,
	562.9,
	563.22,
	563.54,
	563.86,
	564.17,
	564.49,
	564.81,
	565.13,
	565.44,
	565.76,
	566.08,
	566.4,
	566.71,
	567.03,
	567.35,
	567.67,
	567.98,
	568.3,
	568.62,
	568.94,
	569.26,
	569.57,
	569.89,
	570.21,
	570.53,
	570.84,
	571.16,
	571.48,
	571.8,
	572.11,
	572.43,
	572.75,
	573.07,
	573.38,
	573.7,
	574.02,
	574.34,
	574.65,
	574.97,
	575.29,
	575.61,
	575.92,
	576.24,
	576.56,
	576.88,
	577.2,
	577.51,
	577.83,
	578.15,
	578.47,
	578.78,
	579.1,
	579.42,
	579.74,
	580.05,
	580.37,
	580.69,
	581.01,
	581.32,
	581.64,
	581.96,
	582.28,
	582.59,
	582.91,
	583.23,
	583.55,
	583.86,
	584.18,
	584.5,
	584.82,
	585.14,
	585.45,
	585.77,
	586.09,
	586.41,
	586.72,
	587.04,
	587.36,
	587.68,
	587.99,
	588.31,
	588.63,
	588.95,
	589.26,
	589.58,
	589.9,
	590.22,
	590.53,
	590.85,
	591.17,
	591.49,
	591.8,
	592.12,
	592.44,
	592.76,
	593.08,
	593.39,
	593.71,
	594.03,
	594.35,
	594.66,
	594.98,
	595.3,
	595.62,
	595.93,
	596.25,
	596.57,
	596.89,
	597.2,
	597.52,
	597.84,
	598.16,
	598.47,
	598.79,
	599.11,
	599.43,
	599.74,
	600.06,
	600.38,
	600.7,
	601.02,
	601.33,
	601.65,
	601.97,
	602.29,
	602.6,
	602.92,
	603.24,
	603.56,
	603.87,
	604.19,
	604.51,
	604.83,
	605.14,
	605.46,
	605.78,
	606.1,
	606.41,
	606.73,
	607.05,
	607.37,
	607.68,
	608,
	608.32,
	608.64,
	608.96,
	609.27,
	609.59,
	609.91,
	610.23,
	610.54,
	610.86,
	611.18,
	611.5,
	611.81,
	612.13,
	612.45,
	612.77,
	613.08,
	613.4,
	613.72,
	614.04,
	614.35,
	614.67,
	614.99,
	615.31,
	615.62,
	615.94,
	616.26,
	616.58,
	616.9,
	617.21,
	617.53,
	617.85,
	618.17,
	618.48,
	618.8,
	619.12,
	619.44,
	619.75,
	620.07,
	620.39,
	620.71,
	621.02,
	621.34,
	621.66,
	621.98,
	622.29,
	622.61,
	622.93,
	623.25,
	623.56,
	623.88,
	624.2,
	624.52,
	624.84,
	625.15,
	625.47,
	625.79,
	626.11,
	626.42,
	626.74,
	627.06,
	627.38,
	627.69,
	628.01,
	628.33,
	628.65,
	628.96,
	629.28,
	629.6,
	629.92,
	630.23,
	630.55,
	630.87,
	631.19,
	631.5,
	631.82,
	632.14,
	632.46,
	632.78,
	633.09,
	633.41,
	633.73,
	634.05,
	634.36,
	634.68,
	635,
	635.32,
	635.63,
	635.95,
	636.27,
	636.59,
	636.9,
	637.22,
	637.54,
	637.86,
	638.17,
	638.49,
	638.81,
	639.13,
	639.44,
	639.76,
	640.08,
	640.4,
	640.72,
	641.03,
	641.35,
	641.67,
	641.99,
	642.3,
	642.62,
	642.94,
	643.26,
	643.57,
	643.89,
	644.21,
	644.53,
	644.84,
	645.16,
	645.48,
	645.8,
	646.11,
	646.43,
	646.75,
	647.07,
	647.38,
	647.7,
	648.02,
	648.34,
	648.66,
	648.97,
	649.29,
	649.61,
	649.93,
	650.24,
	650.56,
	650.88,
	651.2,
	651.51,
	651.83,
	652.15,
	652.47,
	652.78,
	653.1,
	653.42,
	653.74,
	654.05,
	654.37,
	654.69,
	655.01,
	655.32,
	655.64,
	655.96,
	656.28,
	656.6,
	656.91,
	657.23,
	657.55,
	657.87,
	658.18,
	658.5,
	658.82,
	659.14,
	659.45,
	659.77,
	660.09,
	660.41,
	660.72,
	661.04,
	661.36,
	661.68,
	661.99,
	662.31,
	662.63,
	662.95,
	663.26,
	663.58,
	663.9,
	664.22,
	664.54,
	664.85,
	665.17,
	665.49,
	665.81,
	666.12,
	666.44,
	666.76,
	667.08,
	667.39,
	667.71,
	668.03,
	668.35,
	668.66,
	668.98,
	669.3,
	669.62,
	669.93,
	670.25,
	670.57,
	670.89,
	671.2,
	671.52,
	671.84,
	672.16,
	672.48,
	672.79,
	673.11,
	673.43,
	673.75,
	674.06,
	674.38,
	674.7,
	675.02,
	675.33,
	675.65,
	675.97,
	676.29,
	676.6,
	676.92,
	677.24,
	677.56,
	677.87,
	678.19,
	678.51,
	678.83,
	679.14,
	679.46,
	679.78,
	680.1,
	680.42,
	680.73,
	681.05,
	681.37,
	681.69,
	682,
	682.32,
	682.64,
	682.96,
	683.27,
	683.59,
	683.91,
	684.23,
	684.54,
	684.86,
	685.18,
	685.5,
	685.81,
	686.13,
	686.45,
	686.77,
	687.08,
	687.4,
	687.72,
	688.04,
	688.36,
	688.67,
	688.99,
	689.31,
	689.63,
	689.94,
	690.26,
	690.58,
	690.9,
	691.21,
	691.53,
	691.85,
	692.17,
	692.48,
	692.8,
	693.12,
	693.44,
	693.75,
	694.07,
	694.39,
	694.71,
	695.02,
	695.34,
	695.66,
	695.98,
	696.3,
	696.61,
	696.93,
	697.25,
	697.57,
	697.88,
	698.2,
	698.52,
	698.84,
	699.15,
	699.47,
	699.79,
	700.11,
	700.42,
	700.74,
	701.06,
	701.38,
	701.69,
	702.01,
	702.33,
	702.65,
	702.96,
	703.28,
	703.6,
	703.92,
	704.24,
	704.55,
	704.87,
	705.19,
	705.51,
	705.82,
	706.14,
	706.46,
	706.78,
	707.09,
	707.41,
	707.73,
	708.05,
	708.36,
	708.68,
	709,
	709.32,
	709.63,
	709.95,
	710.27,
	710.59,
	710.9
];


Spectrum.FullSpectrum lightSpectrum;

static this() {	
	//foreach (ref i; emissionIntens) i /= 50.f;
	lightSpectrum = lightSpectrum.fromWavelengths(emissionWavelengths, emissionIntens);
	//lightSpectrum = lightSpectrum.fromWavelengths([400, 500, 600, 700], [0.f, 8, 15.6, 18]);
	lightSpectrum.normalizeLight();
	//printf("light intensity: %f  color: %f %f %f"\n, lightSpectrum.y, lightSpectrum.rgb.r, lightSpectrum.rgb.g, lightSpectrum.rgb.b);
	//lightSpectrum = lightSpectrum.fromRGB(vec3(1.f, 1.f, 1.f));
}


// check that the wavelengths are (more or less) uniformly distributed
unittest {
	foreach (i, b; emissionWavelengths[1..$]) {
		float a = emissionWavelengths[i];
		// they differ by 0.31 nm +- 0.101 nm
		assert (b - a >= 0.3099f);
		assert (b - a <= 0.3201);
	}
}


float cameraResponseFunc(float wavelen) {
	if (wavelen <= 380) return 0.f;
	if (wavelen >= 1100) return 0.f;
	return cameraResponse[cast(int)((wavelen - 380) / 10)] / 50;
}


// 380 thru 1100 nm, every 10nm
float[] cameraResponse = [
	0,
	0,
	2.7262,
	4.5846,
	6.9099,
	9.3752,
	12.397,
	14.614,
	16.434,
	14.816,
	15.326,
	19.684,
	24.026,
	26.785,
	29.586,
	36.366,
	42.644,
	44.631,
	46.71,
	47.736,
	44.695,
	39.779,
	36.394,
	34.715,
	36.246,
	40.283,
	41.844,
	40.17,
	38.58,
	37.855,
	37.873,
	38.944,
	41.718,
	45.921,
	49.216,
	50.24,
	49.392,
	48.229,
	47.094,
	46.204,
	45.987,
	46.483,
	47.759,
	49.447,
	50.46,
	50.192,
	48.758,
	46.843,
	44.465,
	42.08,
	39.854,
	37.527,
	34.981,
	32.355,
	29.282,
	26.003,
	22.754,
	19.437,
	16.892,
	13.742,
	11.312,
	9.3019,
	7.4702,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0
];
