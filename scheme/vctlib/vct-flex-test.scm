;;; -*-scheme-*-
;;; vct-flex-test.scm
;;;
;;; vector library tests for gambit scheme
;;; 
;;; Copyright 2005-2008 Pierre-Alexandre Fournier
;;; (fournier@carretechnologies.com)
;;; All rights reserved.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Some tests (sand-box section)

;;; fixed and floating point vectors
(define vs (s32vector 0 1 2 3 4))
(define vu (u32vector 0 1 2 3 4))
(define vf (f32vector 0. 1. 2. 3. 4.))
(vector-set vu 0 5)
(vector-set vf 0 5.)
(vector-swap vu 0 4)
(vector-swap vf 0 4)
(vector-map square vu)
(vector-map square vf)
(vector-foldr + 0  vu)
(vector-foldr + 0. vf)
(vector-subseq vu 3 6)
(vector-subseq vf 3 6)
(vector-scale vu 4)
(vector-scale vf 4.)
(vector-offset vu 4)
(vector-offset vf 4.)
(vector-offset vu 4)
(vector-offset vf 4.)
(vector-remove-mean vs)
(vector-remove-mean vf)
(vector-add vu vu)
(vector-add vf vf)
(vector-subtract vu vu)
(vector-subtract vf vf)
(vector-multiply vu vu)
(vector-multiply vf vf)
(vector-offset! vu 1)
(vector-offset! vf 1.)
(vector-divide vu vu)
(vector-divide vf vf)
(vector-product vu vu)
(vector-product vf vf)
(vector-replicate vu 3)
(vector-replicate vf 3)
(vector-progressive-sum vu)
(vector-progressive-sum vf)
(vector-fill u32vector 10 (lambda () 4))
(vector-fill f32vector 10 (lambda () 4.))
(vector-iota u32vector 10 3 3)
(vector-iota f32vector 10 3. 3.)
(vector-random u32vector 10 10)
(vector-random f32vector 10 10.)
(vector-gauss f32vector 10 10)  ;; flonum only!
(vector-split vu (list 0 2 3))
(vector-split vf (list 0 2 3))
(vector-chop vu 2)
(vector-chop vf 2)
(vector-chop-overlap vu 2 1)
(vector-chop-overlap vf 2 1)
(vector-sqrt vf)
(vector-abs (vector-offset vs -2))
(vector-abs (vector-offset vf -2.))
(vector-correlation vu vu)
(vector-correlation vf vf)
(vector-prod vu)
(vector-prod vf)
(vector-sum vu)
(vector-sum vf)
(vector-normalize vf)
(vector-normalize-max vf)
(vector-norm vu)
(vector-norm vf)
(vector-mean-square vu)
(vector-mean-square vf)
(vector-normalize-energy vf)
(vector-energy-diff vs (vector-offset vs 1))
(vector-energy-diff vf (vector-offset vf 1))
(vector-normalized-energy-diff vs (vector-offset vs 1))
(vector-normalized-energy-diff vf (vector-offset vf 1))
(vector-power-compressor vf 1. .5)
(vector-min vu)
(vector-max vu)
(vector-min vf)
(vector-max vf)
(vector-min-value vu)
(vector-max-value vu)
(vector-min-value vf)
(vector-max-value vf)
(vector-max-abs vu)
(vector-max-abs vf)
(vector-threshold vu 3)
(vector-threshold vf 3.)
(vector-conv vu vu)
(vector-conv vf vf)
(vector-conv-step vu vu 2)
(vector-conv-step vf vf 2)
(vector-autocorrelation vu)
(vector-autocorrelation vf)
(vector-sliding-f sum vu 3)
(vector-sliding-f sum vf 3)
(vector-sliding-median vu 3)
(vector-sliding-median vf 3)
(vector-sliding-mean vu 3)
(vector-sliding-mean vf 3)
(vector-sliding-min vu 3)
(vector-sliding-min vf 3)
(vector-sliding-max vu 3)
(vector-sliding-max vf 3)
(find-n-max vu 2)
(find-n-max vf 2)
